{"version":3,"sources":["components/Logo/Logo.js","components/Navbar/Navbar.js","components/Mainpage/Mainpage.js","components/Introduction/Introduction.js","components/ServiceCard/ServiceCard.js","components/Services/Services.js","components/TeamCard/TeamCard.js","components/OurAssociation/OurAssociation.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Logo","className","Navbar","Mainpage","Introduction","ServiceCard","heading","details","href","Services","TeamCard","position","name","OurAssociation","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2WAaeA,G,sBAVF,WACT,OACI,yBAAKC,UAAU,QACX,wCACA,uCACA,4CCWGC,EAfA,WACX,OACI,4BAAQD,UAAU,cACd,kBAAC,EAAD,MACA,4BACI,oCACA,wCACA,oCACA,uCACA,6CCODE,G,MAjBG,WACd,OACI,6BAASF,UAAU,sBACf,yBAAKA,UAAU,YACX,mJACA,wGAEJ,yBAAKA,UAAU,WACX,iFACA,uBAAGA,UAAU,UAAb,YAEJ,yBAAKA,UAAU,iBCUZG,G,MArBM,WACjB,OACI,iCACI,yBAAKH,UAAU,YACX,uBAAGA,UAAU,qBAAb,iBAEJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,eACA,qIAEJ,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,qBACA,sdCHLI,G,YAVK,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,QAC3B,OACI,yBAAKN,UAAU,wBACX,2BAAIK,GACJ,2BAAIC,GACJ,uBAAGN,UAAU,cAAcO,KAAK,KAAhC,gBCaGC,EAjBE,WACb,OACI,iCACI,yBAAKR,UAAU,UACX,uBAAGA,UAAU,YAAb,iBAEJ,yBAAKA,UAAU,iBACX,kBAAC,EAAD,CAAaK,QAAQ,eAAeC,QAAQ,0EAC5C,kBAAC,EAAD,CAAaD,QAAQ,eAAeC,QAAQ,0EAC5C,kBAAC,EAAD,CAAaD,QAAQ,eAAeC,QAAQ,0EAC5C,kBAAC,EAAD,CAAaD,QAAQ,eAAeC,QAAQ,0EAC5C,kBAAC,EAAD,CAAaD,QAAQ,eAAeC,QAAQ,6ECG7CG,G,MAfE,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,KAAML,EAAa,EAAbA,QAC/B,OACI,yBAAKN,UAAU,gBACX,yBAAKA,UAAU,eACf,yBAAKA,UAAU,WACX,2BAAIU,GACJ,uBAAGV,UAAU,QAAQW,IAEzB,uBAAGX,UAAU,qBACRM,MCMFM,EAfQ,WACnB,OACI,iCACI,yBAAKZ,UAAU,UACX,uBAAGA,UAAU,YAAb,oBAEJ,yBAAKA,UAAU,0BACX,kBAAC,EAAD,CAAUU,SAAS,WAAWC,KAAK,oBAAoBL,QAAQ,2EAC/D,kBAAC,EAAD,CAAUI,SAAS,WAAWC,KAAK,oBAAoBL,QAAQ,2EAC/D,kBAAC,EAAD,CAAUI,SAAS,WAAWC,KAAK,oBAAoBL,QAAQ,8ECDhEO,EATA,WACX,OACI,mCCkBOC,MAbf,WACE,OACE,yBAAKd,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLYe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a7454179.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return(\r\n        <div className=\"logo\">\r\n            <span>INDIAN</span>\r\n            <span>LEGAL</span>\r\n            <span>MATTERS</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Navbar.css';\r\nimport Logo from '../Logo/Logo';\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <header className=\"navigation\">\r\n            <Logo/>\r\n            <ul>\r\n                <li>Home</li>\r\n                <li>About Us</li>\r\n                <li>Blog</li>\r\n                <li>Join Us</li>\r\n                <li>Contact Us</li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './Mainpage.css';\r\n\r\nconst  Mainpage = () => {\r\n    return(\r\n        <section className=\"hero mainContainer\">\r\n            <div className=\"mainText\">\r\n                <h1>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna</h1>\r\n                <h3>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi</h3>\r\n            </div>\r\n            <div className=\"mainBox\">\r\n                <p>At vero eos et accusamus et iusto odio dignissimos</p>\r\n                <p className=\"boxBtn\">Hire Us</p>\r\n            </div>\r\n            <div className=\"mainImage\">\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Mainpage;","import React from 'react';\r\nimport './Introduction.css';\r\n\r\nconst Introduction = () => {\r\n    return(\r\n        <section>\r\n            <div className=\"parallax\">\r\n                <p className=\"heroText whiteTxt\">Who are we ?</p>\r\n            </div>\r\n            <div className=\"wwaWrapper\">\r\n                <div className=\"wwaCol1\">\r\n                    <p className=\"heroText\">Our Mission</p>\r\n                    <p>Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur</p>\r\n                </div>\r\n                <div className=\"wwaCol2\">\r\n                    <p className=\"heroText\">Leaders and Doers</p>\r\n                    <p>We Are Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur.\r\n                        At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Introduction;","import React from 'react';\r\nimport './ServiceCard.css';\r\n\r\nconst ServiceCard = ({heading, details}) => {\r\n    return(\r\n        <div className=\"serviceCard whiteTxt\">\r\n            <p>{heading}</p>\r\n            <p>{details}</p>\r\n            <a className=\"serviceLink\" href=\"#\">know more</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ServiceCard;","import React from 'react';\r\nimport './Services.css';\r\nimport ServiceCard from '../ServiceCard/ServiceCard';\r\n\r\nconst Services = () => {\r\n    return(\r\n        <section>\r\n            <div className=\"banner\">\r\n                <p className=\"heroText\">Our Services</p>\r\n            </div>\r\n            <div className=\"cardContainer\">\r\n                <ServiceCard heading=\"Criminal Law\" details=\"Suggestions required if logo or image related to header to be put in?\"/>\r\n                <ServiceCard heading=\"Criminal Law\" details=\"Suggestions required if logo or image related to header to be put in?\"/>\r\n                <ServiceCard heading=\"Criminal Law\" details=\"Suggestions required if logo or image related to header to be put in?\"/>\r\n                <ServiceCard heading=\"Criminal Law\" details=\"Suggestions required if logo or image related to header to be put in?\"/>\r\n                <ServiceCard heading=\"Criminal Law\" details=\"Suggestions required if logo or image related to header to be put in?\"/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Services;","import React from 'react';\r\nimport './TeamCard.css';\r\n\r\nconst TeamCard = ({position, name, details}) => {\r\n    return(\r\n        <div className=\"teamInfoCard\">\r\n            <div className=\"profileImg\"/>\r\n            <div className=\"nameTag\">\r\n                <p>{position}</p>\r\n                <p className=\"name\">{name}</p>\r\n            </div>\r\n            <p className=\"teamInfo whiteTxt\">\r\n                {details}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamCard;","import React from 'react';\r\nimport TeamCard from '../TeamCard/TeamCard'\r\n\r\nconst OurAssociation = () => {\r\n    return(\r\n        <section>\r\n            <div className=\"banner\">\r\n                <p className=\"heroText\">Our Association</p>\r\n            </div>\r\n            <div className=\"cardContainer halfBlue\">\r\n                <TeamCard position=\"advocate\" name=\"Suneet Singh Deol\" details=\"Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis \"/>\r\n                <TeamCard position=\"advocate\" name=\"Suneet Singh Deol\" details=\"Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis \"/>\r\n                <TeamCard position=\"advocate\" name=\"Suneet Singh Deol\" details=\"Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis \"/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default OurAssociation;","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <section>\r\n\r\n        </section>\r\n        \r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Mainpage from './components/Mainpage/Mainpage';\nimport Introduction from './components/Introduction/Introduction';\nimport Services from './components/Services/Services';\nimport OurAssociation from './components/OurAssociation/OurAssociation';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"mainWrapper\">\n        <Navbar/>\n        <Mainpage/>\n        <Introduction/>\n        <Services/>\n        <OurAssociation/>\n        <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}